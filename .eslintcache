[{"C:\\www\\react\\todolist\\src\\index.tsx":"1","C:\\www\\react\\todolist\\src\\reportWebVitals.ts":"2","C:\\www\\react\\todolist\\src\\App.tsx":"3","C:\\www\\react\\todolist\\src\\Components\\TodoField\\TodoField.tsx":"4","C:\\www\\react\\todolist\\src\\Components\\TodoInput\\TodoInput.tsx":"5","C:\\www\\react\\todolist\\src\\Store\\inputReducer.ts":"6","C:\\www\\react\\todolist\\src\\Store\\store.ts":"7","C:\\www\\react\\todolist\\src\\Components\\Task\\Task.tsx":"8","C:\\www\\react\\todolist\\src\\Components\\Sorting\\Sorting.tsx":"9","C:\\www\\react\\todolist\\src\\Components\\Categories\\Categories.tsx":"10","C:\\www\\react\\todolist\\src\\Store\\categoriesReducer.ts":"11"},{"size":773,"mtime":1609083025084,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":435,"mtime":1609076579970,"results":"15","hashOfConfig":"13"},{"size":2423,"mtime":1609142248952,"results":"16","hashOfConfig":"13"},{"size":1689,"mtime":1609084174935,"results":"17","hashOfConfig":"13"},{"size":6232,"mtime":1609143832786,"results":"18","hashOfConfig":"13"},{"size":558,"mtime":1609076580001,"results":"19","hashOfConfig":"13"},{"size":3028,"mtime":1609144022144,"results":"20","hashOfConfig":"13"},{"size":1005,"mtime":1609083025060,"results":"21","hashOfConfig":"13"},{"size":2209,"mtime":1609083025051,"results":"22","hashOfConfig":"13"},{"size":2149,"mtime":1609083025069,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1t71q55",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\www\\react\\todolist\\src\\index.tsx",[],"C:\\www\\react\\todolist\\src\\reportWebVitals.ts",[],["48","49"],"C:\\www\\react\\todolist\\src\\App.tsx",[],"C:\\www\\react\\todolist\\src\\Components\\TodoField\\TodoField.tsx",[],"C:\\www\\react\\todolist\\src\\Components\\TodoInput\\TodoInput.tsx",[],"C:\\www\\react\\todolist\\src\\Store\\inputReducer.ts",[],"C:\\www\\react\\todolist\\src\\Store\\store.ts",[],"C:\\www\\react\\todolist\\src\\Components\\Task\\Task.tsx",[],"C:\\www\\react\\todolist\\src\\Components\\Sorting\\Sorting.tsx",[],"C:\\www\\react\\todolist\\src\\Components\\Categories\\Categories.tsx",["50"],"import React from \"react\";\r\nimport styles from './Categories.module.css'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {appStoreType} from \"../../Store/store\";\r\nimport {addCategory, addSymbolCategories, categoriesType, deleteCategory} from \"../../Store/categoriesReducer\";\r\nimport {showAllCategories, switchCategory} from \"../../Store/inputReducer\";\r\n\r\nexport const Categories = () => {\r\n    const categories: Array<categoriesType> = useSelector((state: appStoreType) => state.todoCategories.categories)\r\n    const symbol: string = useSelector((state: appStoreType) => state.todoCategories.categoriesSymbols)\r\n    const dispatch = useDispatch()\r\n    const onCategoriesSymbolChange = (e) => {\r\n        dispatch(addSymbolCategories(e.currentTarget.value))\r\n    }\r\n    const onAddCategory = (e) => {\r\n        if (e.key === 'Enter') {\r\n            dispatch(addCategory())\r\n        }\r\n    }\r\n    const onCategoryDelete = (id) => {\r\n        dispatch(deleteCategory(id))\r\n    }\r\n    const onCategorySwitch = (categoryName) => {\r\n        dispatch(switchCategory(categoryName))\r\n    }\r\n    const onShowAllCategories = () => {\r\n        dispatch(showAllCategories())\r\n    }\r\n    return (\r\n        <div className={styles.categories}>\r\n            <h2>Categories</h2>\r\n            <div onClick={onShowAllCategories}>All</div>\r\n            {categories.map(item =>\r\n                <div key={item.id} className={styles.categories__item}>\r\n                    <span onClick={() => onCategorySwitch(item.name)}>{item.name}</span>\r\n                    <span onClick={() => onCategoryDelete(item.id)} className={styles.categories__delete}>X</span>\r\n                </div>)}\r\n            <input onChange={onCategoriesSymbolChange} onKeyPress={onAddCategory}\r\n                   value={symbol} type=\"text\" placeholder='new category'/>\r\n        </div>\r\n    )\r\n}","C:\\www\\react\\todolist\\src\\Store\\categoriesReducer.ts",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":16,"nodeType":"57","messageId":"58","endLine":1,"endColumn":24},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]